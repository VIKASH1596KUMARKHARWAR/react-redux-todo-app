{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n// \treturn (\n// \t\t<ul className='list-group'>\n// \t\t\t{todos.map((todo) => (\n// \t\t\t\t<TodoItem\n// \t\t\t\t\tkey={todo.id} // Added key to resolve warning\n// \t\t\t\t\tid={todo.id}\n// \t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\tdueDate={todo.dueDate} // Added dueDate prop\n// \t\t\t\t/>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n// // export default TodoList;\n// import React, { useEffect, useState } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n// \tconst [filter, setFilter] = useState('all'); // 'all', 'completed', 'pending', 'overdue'\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n// \t// Filtered todos based on the selected filter\n// \tconst filteredTodos = todos.filter((todo) => {\n// \t\tif (filter === 'completed') return todo.completed;\n// \t\tif (filter === 'pending') return !todo.completed;\n// \t\tif (filter === 'overdue') {\n// \t\t\tconst dueDate = new Date(todo.dueDate);\n// \t\t\tconst currentDate = new Date();\n// \t\t\treturn !todo.completed && dueDate < currentDate;\n// \t\t}\n// \t\treturn true; // 'all'\n// \t});\n// \treturn (\n// \t\t<div>\n// \t\t\t<div className='mb-3'>\n// \t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n// \t\t\t\t<select\n// \t\t\t\t\tid='filter'\n// \t\t\t\t\tclassName='form-control'\n// \t\t\t\t\tvalue={filter}\n// \t\t\t\t\tonChange={(e) => setFilter(e.target.value)}\n// \t\t\t\t>\n// \t\t\t\t\t<option value='all'>All Tasks</option>\n// \t\t\t\t\t<option value='completed'>Completed Tasks</option>\n// \t\t\t\t\t<option value='pending'>Pending Tasks</option>\n// \t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n// \t\t\t\t</select>\n// \t\t\t</div>\n// \t\t\t<ul className='list-group'>\n// \t\t\t\t{filteredTodos.map((todo) => (\n// \t\t\t\t\t<TodoItem\n// \t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\tid={todo.id}\n// \t\t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\t\tdueDate={todo.dueDate}\n// \t\t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</ul>\n// \t\t</div>\n// \t);\n// };\n// export default TodoList;\nimport React,{useEffect}from'react';import TodoItem from'./TodoItem';import{useSelector,useDispatch}from'react-redux';import{getTodosAsync,setFilter}from'../redux/todoSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TodoList=()=>{const dispatch=useDispatch();const{items:todos,filter}=useSelector(state=>state.todos);useEffect(()=>{dispatch(getTodosAsync());},[dispatch]);// Apply filter\nconst filteredTodos=todos.filter(todo=>{if(filter==='completed')return todo.completed;if(filter==='pending')return!todo.completed;if(filter==='overdue'){const dueDate=new Date(todo.dueDate);return!todo.completed&&dueDate<new Date();}return true;// 'all'\n});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"filter\",children:\"Filter Tasks:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"filter\",className:\"form-control\",value:filter,onChange:e=>dispatch(setFilter(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Tasks\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed Tasks\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending Tasks\"}),/*#__PURE__*/_jsx(\"option\",{value:\"overdue\",children:\"Overdue Tasks\"})]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:filteredTodos.map(todo=>/*#__PURE__*/_jsx(TodoItem,{id:todo.id,title:todo.title,dueDate:todo.dueDate,completed:todo.completed},todo.id))})]});};export default TodoList;","map":{"version":3,"names":["React","useEffect","TodoItem","useSelector","useDispatch","getTodosAsync","setFilter","jsx","_jsx","jsxs","_jsxs","TodoList","dispatch","items","todos","filter","state","filteredTodos","todo","completed","dueDate","Date","children","className","htmlFor","id","value","onChange","e","target","map","title"],"sources":["/home/vikash/Documents/react-redux-todo-app/final/src/components/TodoList.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \treturn (\n// \t\t<ul className='list-group'>\n// \t\t\t{todos.map((todo) => (\n// \t\t\t\t<TodoItem\n// \t\t\t\t\tkey={todo.id} // Added key to resolve warning\n// \t\t\t\t\tid={todo.id}\n// \t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\tdueDate={todo.dueDate} // Added dueDate prop\n// \t\t\t\t/>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n\n// // export default TodoList;\n// import React, { useEffect, useState } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n// \tconst [filter, setFilter] = useState('all'); // 'all', 'completed', 'pending', 'overdue'\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \t// Filtered todos based on the selected filter\n// \tconst filteredTodos = todos.filter((todo) => {\n// \t\tif (filter === 'completed') return todo.completed;\n// \t\tif (filter === 'pending') return !todo.completed;\n// \t\tif (filter === 'overdue') {\n// \t\t\tconst dueDate = new Date(todo.dueDate);\n// \t\t\tconst currentDate = new Date();\n// \t\t\treturn !todo.completed && dueDate < currentDate;\n// \t\t}\n// \t\treturn true; // 'all'\n// \t});\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div className='mb-3'>\n// \t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n// \t\t\t\t<select\n// \t\t\t\t\tid='filter'\n// \t\t\t\t\tclassName='form-control'\n// \t\t\t\t\tvalue={filter}\n// \t\t\t\t\tonChange={(e) => setFilter(e.target.value)}\n// \t\t\t\t>\n// \t\t\t\t\t<option value='all'>All Tasks</option>\n// \t\t\t\t\t<option value='completed'>Completed Tasks</option>\n// \t\t\t\t\t<option value='pending'>Pending Tasks</option>\n// \t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n// \t\t\t\t</select>\n// \t\t\t</div>\n// \t\t\t<ul className='list-group'>\n// \t\t\t\t{filteredTodos.map((todo) => (\n// \t\t\t\t\t<TodoItem\n// \t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\tid={todo.id}\n// \t\t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\t\tdueDate={todo.dueDate}\n// \t\t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</ul>\n// \t\t</div>\n// \t);\n// };\n\n// export default TodoList;\nimport React, { useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodosAsync, setFilter } from '../redux/todoSlice';\n\nconst TodoList = () => {\n\tconst dispatch = useDispatch();\n\tconst { items: todos, filter } = useSelector((state) => state.todos);\n\n\tuseEffect(() => {\n\t\tdispatch(getTodosAsync());\n\t}, [dispatch]);\n\n\t// Apply filter\n\tconst filteredTodos = todos.filter((todo) => {\n\t\tif (filter === 'completed') return todo.completed;\n\t\tif (filter === 'pending') return !todo.completed;\n\t\tif (filter === 'overdue') {\n\t\t\tconst dueDate = new Date(todo.dueDate);\n\t\t\treturn !todo.completed && dueDate < new Date();\n\t\t}\n\t\treturn true; // 'all'\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='mb-3'>\n\t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n\t\t\t\t<select\n\t\t\t\t\tid='filter'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tvalue={filter}\n\t\t\t\t\tonChange={(e) => dispatch(setFilter(e.target.value))}\n\t\t\t\t>\n\t\t\t\t\t<option value='all'>All Tasks</option>\n\t\t\t\t\t<option value='completed'>Completed Tasks</option>\n\t\t\t\t\t<option value='pending'>Pending Tasks</option>\n\t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<ul className='list-group'>\n\t\t\t\t{filteredTodos.map((todo) => (\n\t\t\t\t\t<TodoItem\n\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\tdueDate={todo.dueDate}\n\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}