{"ast":null,"code":"var _jsxFileName = \"/home/vikash/Documents/react-redux-todo-app/final/src/components/TodoList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \treturn (\n// \t\t<ul className='list-group'>\n// \t\t\t{todos.map((todo) => (\n// \t\t\t\t<TodoItem\n// \t\t\t\t\tkey={todo.id} // Added key to resolve warning\n// \t\t\t\t\tid={todo.id}\n// \t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\tdueDate={todo.dueDate} // Added dueDate prop\n// \t\t\t\t/>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n\n// // export default TodoList;\n// import React, { useEffect, useState } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n// \tconst [filter, setFilter] = useState('all'); // 'all', 'completed', 'pending', 'overdue'\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \t// Filtered todos based on the selected filter\n// \tconst filteredTodos = todos.filter((todo) => {\n// \t\tif (filter === 'completed') return todo.completed;\n// \t\tif (filter === 'pending') return !todo.completed;\n// \t\tif (filter === 'overdue') {\n// \t\t\tconst dueDate = new Date(todo.dueDate);\n// \t\t\tconst currentDate = new Date();\n// \t\t\treturn !todo.completed && dueDate < currentDate;\n// \t\t}\n// \t\treturn true; // 'all'\n// \t});\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div className='mb-3'>\n// \t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n// \t\t\t\t<select\n// \t\t\t\t\tid='filter'\n// \t\t\t\t\tclassName='form-control'\n// \t\t\t\t\tvalue={filter}\n// \t\t\t\t\tonChange={(e) => setFilter(e.target.value)}\n// \t\t\t\t>\n// \t\t\t\t\t<option value='all'>All Tasks</option>\n// \t\t\t\t\t<option value='completed'>Completed Tasks</option>\n// \t\t\t\t\t<option value='pending'>Pending Tasks</option>\n// \t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n// \t\t\t\t</select>\n// \t\t\t</div>\n// \t\t\t<ul className='list-group'>\n// \t\t\t\t{filteredTodos.map((todo) => (\n// \t\t\t\t\t<TodoItem\n// \t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\tid={todo.id}\n// \t\t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\t\tdueDate={todo.dueDate}\n// \t\t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</ul>\n// \t\t</div>\n// \t);\n// };\n\n// export default TodoList;\nimport React, { useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodosAsync, setFilter } from '../redux/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: todos,\n    filter\n  } = useSelector(state => state.todos);\n  useEffect(() => {\n    dispatch(getTodosAsync());\n  }, [dispatch]);\n\n  // Apply filter\n  const filteredTodos = todos.filter(todo => {\n    if (filter === 'completed') return todo.completed;\n    if (filter === 'pending') return !todo.completed;\n    if (filter === 'overdue') {\n      const dueDate = new Date(todo.dueDate);\n      return !todo.completed && dueDate < new Date();\n    }\n    return true; // 'all'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filter\",\n        className: \"form-control\",\n        value: filter,\n        onChange: e => dispatch(setFilter(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"overdue\",\n          children: \"Overdue Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: todo.id,\n        title: todo.title,\n        dueDate: todo.dueDate,\n        completed: todo.completed\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n_s(TodoList, \"U82aZG/eCB+naFBQfCupwAMu+VQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","TodoItem","useSelector","useDispatch","getTodosAsync","setFilter","jsxDEV","_jsxDEV","TodoList","_s","dispatch","items","todos","filter","state","filteredTodos","todo","completed","dueDate","Date","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","map","title","_c","$RefreshReg$"],"sources":["/home/vikash/Documents/react-redux-todo-app/final/src/components/TodoList.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \treturn (\n// \t\t<ul className='list-group'>\n// \t\t\t{todos.map((todo) => (\n// \t\t\t\t<TodoItem\n// \t\t\t\t\tkey={todo.id} // Added key to resolve warning\n// \t\t\t\t\tid={todo.id}\n// \t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\tdueDate={todo.dueDate} // Added dueDate prop\n// \t\t\t\t/>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n\n// // export default TodoList;\n// import React, { useEffect, useState } from 'react';\n// import TodoItem from './TodoItem';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getTodosAsync } from '../redux/todoSlice';\n\n// const TodoList = () => {\n// \tconst dispatch = useDispatch();\n// \tconst todos = useSelector((state) => state.todos);\n// \tconst [filter, setFilter] = useState('all'); // 'all', 'completed', 'pending', 'overdue'\n\n// \tuseEffect(() => {\n// \t\tdispatch(getTodosAsync());\n// \t}, [dispatch]);\n\n// \t// Filtered todos based on the selected filter\n// \tconst filteredTodos = todos.filter((todo) => {\n// \t\tif (filter === 'completed') return todo.completed;\n// \t\tif (filter === 'pending') return !todo.completed;\n// \t\tif (filter === 'overdue') {\n// \t\t\tconst dueDate = new Date(todo.dueDate);\n// \t\t\tconst currentDate = new Date();\n// \t\t\treturn !todo.completed && dueDate < currentDate;\n// \t\t}\n// \t\treturn true; // 'all'\n// \t});\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div className='mb-3'>\n// \t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n// \t\t\t\t<select\n// \t\t\t\t\tid='filter'\n// \t\t\t\t\tclassName='form-control'\n// \t\t\t\t\tvalue={filter}\n// \t\t\t\t\tonChange={(e) => setFilter(e.target.value)}\n// \t\t\t\t>\n// \t\t\t\t\t<option value='all'>All Tasks</option>\n// \t\t\t\t\t<option value='completed'>Completed Tasks</option>\n// \t\t\t\t\t<option value='pending'>Pending Tasks</option>\n// \t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n// \t\t\t\t</select>\n// \t\t\t</div>\n// \t\t\t<ul className='list-group'>\n// \t\t\t\t{filteredTodos.map((todo) => (\n// \t\t\t\t\t<TodoItem\n// \t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\tid={todo.id}\n// \t\t\t\t\t\ttitle={todo.title}\n// \t\t\t\t\t\tdueDate={todo.dueDate}\n// \t\t\t\t\t\tcompleted={todo.completed}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</ul>\n// \t\t</div>\n// \t);\n// };\n\n// export default TodoList;\nimport React, { useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodosAsync, setFilter } from '../redux/todoSlice';\n\nconst TodoList = () => {\n\tconst dispatch = useDispatch();\n\tconst { items: todos, filter } = useSelector((state) => state.todos);\n\n\tuseEffect(() => {\n\t\tdispatch(getTodosAsync());\n\t}, [dispatch]);\n\n\t// Apply filter\n\tconst filteredTodos = todos.filter((todo) => {\n\t\tif (filter === 'completed') return todo.completed;\n\t\tif (filter === 'pending') return !todo.completed;\n\t\tif (filter === 'overdue') {\n\t\t\tconst dueDate = new Date(todo.dueDate);\n\t\t\treturn !todo.completed && dueDate < new Date();\n\t\t}\n\t\treturn true; // 'all'\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='mb-3'>\n\t\t\t\t<label htmlFor='filter'>Filter Tasks:</label>\n\t\t\t\t<select\n\t\t\t\t\tid='filter'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tvalue={filter}\n\t\t\t\t\tonChange={(e) => dispatch(setFilter(e.target.value))}\n\t\t\t\t>\n\t\t\t\t\t<option value='all'>All Tasks</option>\n\t\t\t\t\t<option value='completed'>Completed Tasks</option>\n\t\t\t\t\t<option value='pending'>Pending Tasks</option>\n\t\t\t\t\t<option value='overdue'>Overdue Tasks</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<ul className='list-group'>\n\t\t\t\t{filteredTodos.map((todo) => (\n\t\t\t\t\t<TodoItem\n\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\tdueDate={todo.dueDate}\n\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}