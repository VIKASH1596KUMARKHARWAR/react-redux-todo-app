{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nimport { loadFromLocalStorage, saveToLocalStorage } from './utils/localStorage';\nconst persistedState = loadFromLocalStorage() || {\n  items: [],\n  filter: 'all'\n};\nconst store = configureStore({\n  reducer: {\n    todos: todoReducer\n  },\n  preloadedState: persistedState // Load state from localStorage\n});\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState().todos); // Save todos state to localStorage on every change\n});\nexport default store;","map":{"version":3,"names":["configureStore","todoReducer","loadFromLocalStorage","saveToLocalStorage","persistedState","items","filter","store","reducer","todos","preloadedState","subscribe","getState"],"sources":["/media/vikash/Local Disk extra/iNTERN pRoject/react-redux-todo-app/final/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nimport { loadFromLocalStorage, saveToLocalStorage } from './utils/localStorage';\n\nconst persistedState = loadFromLocalStorage() || { items: [], filter: 'all' };\n\nconst store = configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n  preloadedState: persistedState, // Load state from localStorage\n});\n\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState().todos); // Save todos state to localStorage on every change\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,sBAAsB;AAE/E,MAAMC,cAAc,GAAGF,oBAAoB,CAAC,CAAC,IAAI;EAAEG,KAAK,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAM,CAAC;AAE7E,MAAMC,KAAK,GAAGP,cAAc,CAAC;EAC3BQ,OAAO,EAAE;IACPC,KAAK,EAAER;EACT,CAAC;EACDS,cAAc,EAAEN,cAAc,CAAE;AAClC,CAAC,CAAC;AAEFG,KAAK,CAACI,SAAS,CAAC,MAAM;EACpBR,kBAAkB,CAACI,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAeF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}