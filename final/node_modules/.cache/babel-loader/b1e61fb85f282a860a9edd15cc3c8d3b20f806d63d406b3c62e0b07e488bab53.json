{"ast":null,"code":"// // utils/localStorage.js\n\n// export const saveToLocalStorage = (state) => {\n//     try {\n//         const serializedState = JSON.stringify(state);\n//         localStorage.setItem('todos', serializedState); // Store in localStorage\n//     } catch (e) {\n//         console.error(\"Could not save state to localStorage\", e);\n//     }\n// };\n\n// export const loadFromLocalStorage = () => {\n//     try {\n//         const serializedState = localStorage.getItem('todos');\n//         if (serializedState === null) {\n//             return undefined; // Return undefined to use the initial state in case there's no data\n//         }\n//         return JSON.parse(serializedState);\n//     } catch (e) {\n//         console.error(\"Could not load state from localStorage\", e);\n//         return undefined;\n//     }\n// };\n// utils/localStorage.js\n\nexport const saveToLocalStorage = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('todos', serializedState); // Store in localStorage\n  } catch (e) {\n    console.error(\"Could not save state to localStorage\", e);\n  }\n};\nexport const loadFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('todos');\n    if (serializedState === null) {\n      return []; // Return an empty array if no todos are saved\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.error(\"Could not load state from localStorage\", e);\n    return []; // Return an empty array on error\n  }\n};","map":{"version":3,"names":["saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","error","loadFromLocalStorage","getItem","parse"],"sources":["/media/vikash/Local Disk extra/iNTERN pRoject/react-redux-todo-app/final/src/utils/localStorage.js"],"sourcesContent":["// // utils/localStorage.js\n\n// export const saveToLocalStorage = (state) => {\n//     try {\n//         const serializedState = JSON.stringify(state);\n//         localStorage.setItem('todos', serializedState); // Store in localStorage\n//     } catch (e) {\n//         console.error(\"Could not save state to localStorage\", e);\n//     }\n// };\n\n// export const loadFromLocalStorage = () => {\n//     try {\n//         const serializedState = localStorage.getItem('todos');\n//         if (serializedState === null) {\n//             return undefined; // Return undefined to use the initial state in case there's no data\n//         }\n//         return JSON.parse(serializedState);\n//     } catch (e) {\n//         console.error(\"Could not load state from localStorage\", e);\n//         return undefined;\n//     }\n// };\n// utils/localStorage.js\n\nexport const saveToLocalStorage = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('todos', serializedState); // Store in localStorage\n    } catch (e) {\n      console.error(\"Could not save state to localStorage\", e);\n    }\n  };\n  \n  export const loadFromLocalStorage = () => {\n    try {\n      const serializedState = localStorage.getItem('todos');\n      if (serializedState === null) {\n        return []; // Return an empty array if no todos are saved\n      }\n      return JSON.parse(serializedState);\n    } catch (e) {\n      console.error(\"Could not load state from localStorage\", e);\n      return []; // Return an empty array on error\n    }\n  };\n  "],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,kBAAkB,GAAIC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAC7CI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,eAAe,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,CAAC,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;EACxC,IAAI;IACF,MAAMR,eAAe,GAAGG,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IACrD,IAAIT,eAAe,KAAK,IAAI,EAAE;MAC5B,OAAO,EAAE,CAAC,CAAC;IACb;IACA,OAAOC,IAAI,CAACS,KAAK,CAACV,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEF,CAAC,CAAC;IAC1D,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}