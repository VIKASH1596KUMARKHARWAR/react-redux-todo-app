{"ast":null,"code":"// store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nimport { saveToLocalStorage, loadFromLocalStorage } from '../utils/localStorage';\nconst persistedState = loadFromLocalStorage(); // Load persisted state from localStorage\n\nconst store = configureStore({\n  reducer: {\n    todos: todoReducer\n  },\n  preloadedState: persistedState // Set the initial state from localStorage (if exists)\n});\n\n// Subscribe to store changes and save state to localStorage\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState()); // Save state to localStorage whenever state changes\n});\nexport default store;","map":{"version":3,"names":["configureStore","todoReducer","saveToLocalStorage","loadFromLocalStorage","persistedState","store","reducer","todos","preloadedState","subscribe","getState"],"sources":["/media/vikash/Local Disk extra/iNTERN pRoject/react-redux-todo-app/final/src/redux/store.js"],"sourcesContent":["// store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nimport { saveToLocalStorage, loadFromLocalStorage } from '../utils/localStorage';\n\nconst persistedState = loadFromLocalStorage(); // Load persisted state from localStorage\n\nconst store = configureStore({\n\treducer: {\n\t\ttodos: todoReducer,\n\t},\n\tpreloadedState: persistedState, // Set the initial state from localStorage (if exists)\n});\n\n// Subscribe to store changes and save state to localStorage\nstore.subscribe(() => {\n\tsaveToLocalStorage(store.getState()); // Save state to localStorage whenever state changes\n});\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,uBAAuB;AAEhF,MAAMC,cAAc,GAAGD,oBAAoB,CAAC,CAAC,CAAC,CAAC;;AAE/C,MAAME,KAAK,GAAGL,cAAc,CAAC;EAC5BM,OAAO,EAAE;IACRC,KAAK,EAAEN;EACR,CAAC;EACDO,cAAc,EAAEJ,cAAc,CAAE;AACjC,CAAC,CAAC;;AAEF;AACAC,KAAK,CAACI,SAAS,CAAC,MAAM;EACrBP,kBAAkB,CAACG,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}