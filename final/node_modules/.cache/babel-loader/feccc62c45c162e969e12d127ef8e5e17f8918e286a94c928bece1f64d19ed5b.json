{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import todoReducer from'./todoSlice';import{loadFromLocalStorage,saveToLocalStorage}from'../utils/localStorage';const persistedState=loadFromLocalStorage()||{items:[],filter:'all'};const store=configureStore({reducer:{todos:todoReducer},preloadedState:persistedState// Load state from localStorage\n});store.subscribe(()=>{saveToLocalStorage(store.getState().todos);// Save todos state to localStorage on every change\n});export default store;","map":{"version":3,"names":["configureStore","todoReducer","loadFromLocalStorage","saveToLocalStorage","persistedState","items","filter","store","reducer","todos","preloadedState","subscribe","getState"],"sources":["/home/vikash/Documents/react-redux-todo-app/final/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nimport { loadFromLocalStorage, saveToLocalStorage } from '../utils/localStorage';\n\nconst persistedState = loadFromLocalStorage() || { items: [], filter: 'all' };\n\nconst store = configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n  preloadedState: persistedState, // Load state from localStorage\n});\n\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState().todos); // Save todos state to localStorage on every change\n});\n\nexport default store;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,OAASC,oBAAoB,CAAEC,kBAAkB,KAAQ,uBAAuB,CAEhF,KAAM,CAAAC,cAAc,CAAGF,oBAAoB,CAAC,CAAC,EAAI,CAAEG,KAAK,CAAE,EAAE,CAAEC,MAAM,CAAE,KAAM,CAAC,CAE7E,KAAM,CAAAC,KAAK,CAAGP,cAAc,CAAC,CAC3BQ,OAAO,CAAE,CACPC,KAAK,CAAER,WACT,CAAC,CACDS,cAAc,CAAEN,cAAgB;AAClC,CAAC,CAAC,CAEFG,KAAK,CAACI,SAAS,CAAC,IAAM,CACpBR,kBAAkB,CAACI,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACH,KAAK,CAAC,CAAE;AAC9C,CAAC,CAAC,CAEF,cAAe,CAAAF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}